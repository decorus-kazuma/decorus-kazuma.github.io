{"componentChunkName":"component---src-templates-blog-post-js","path":"/2018/07/04/laravel-dependency-injection-in-depth","result":{"data":{"content":{"edges":[{"node":{"id":"1f6d524c-17fa-5d22-9920-db6b7dc3727f","html":"<p><a href=\"https://laravel.kr/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Laravel</a> 의 제어의 역전(Inversion of Control) / 의존성 주입 (Dependency Injection) 컨테이너는 매우 강력한 기능입니다. 안타깝게도, 라라벨의 <a href=\"https://laravel.kr/docs/5.6/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">공식 문서</a>는 이 기능의 모든 면을 설명하고 있지 않습니다. 그런 이유로 저는 직접 이 기능들을 실험하여 본 문서를 작성했습니다. 이 문서는 <a href=\"https://github.com/laravel/framework/tree/5.4/src/Illuminate/Container\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Laravel 5.4.26</a> 버전을 기준으로 작성되었으며, 그 외 버전은 기능이 다를 수 있습니다. <strong>이 문서는 번역되었습니다.</strong></p>\n<h2 id=\"의존성-주입이란\" style=\"position:relative;\"><a href=\"#%EC%9D%98%EC%A1%B4%EC%84%B1-%EC%A3%BC%EC%9E%85%EC%9D%B4%EB%9E%80\" aria-label=\"의존성 주입이란 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>의존성 주입이란</h2>\n<p>이 문서에서는 의존성 주입과 제어의 역전 원칙에 대해 설명하지 않습니다. 이것들에 대해 익숙하지 않으시다면 <a href=\"http://fabien.potencier.org/what-is-dependency-injection.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">What is Dependency Injection?</a> by Fabien Potencier (<a href=\"http://symfony.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Symfony</a> framework 의 메인테이너) 가 작성한 글을 참고하실 수 있습니다.</p>\n<h2 id=\"컨테이너-접근\" style=\"position:relative;\"><a href=\"#%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88-%EC%A0%91%EA%B7%BC\" aria-label=\"컨테이너 접근 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>컨테이너 접근</h2>\n<p>라라벨의 컨테이너 인스턴스에 접근하는 방법은 여러가지가 있습니다. 그러나 가장 간단한 방법은 <code class=\"language-text\">app()</code> 헬퍼 메소드를 호출하는 것입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token variable\">$container</span> <span class=\"token operator\">=</span> <span class=\"token function\">app</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>이 시간에는 다른 방법에 대해서는 따로 서술하지 않겠습니다. 그 대신, 컨테이너 클래스에 초점을 맞추어 보도록 하겠습니다.</p>\n<p><strong>Note:</strong> 공식 문서에서는 <code class=\"language-text\">$container</code> 대신 <code class=\"language-text\">$this-&gt;app</code> 을 사용할 것입니다.</p>\n<p>(* 라라벨 어플리케이션에서 이것은 실제로 Application 이라는 Container 의 서브 클래스 입니다. 그러나 이 글에서는 Container 메소드에 대해서만 설명할 것입니다.)</p>\n<h3 id=\"외부에서-illuminatecontainer-를-사용\" style=\"position:relative;\"><a href=\"#%EC%99%B8%EB%B6%80%EC%97%90%EC%84%9C-illuminatecontainer-%EB%A5%BC-%EC%82%AC%EC%9A%A9\" aria-label=\"외부에서 illuminatecontainer 를 사용 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>외부에서 Illuminate\\Container 를 사용</h3>\n<p>라라벨 외부에서 컨테이너를 사용하고 싶으신 경우, <a href=\"https://packagist.org/packages/illuminate/container\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">이것</a>을 설치하신 후, 아래와 같이 사용하실 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token keyword\">use</span> <span class=\"token package\">Illuminate<span class=\"token punctuation\">\\</span>Container<span class=\"token punctuation\">\\</span>Container</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$container</span> <span class=\"token operator\">=</span> Container<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<h3 id=\"기본적인-사용법\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%EB%B3%B8%EC%A0%81%EC%9D%B8-%EC%82%AC%EC%9A%A9%EB%B2%95\" aria-label=\"기본적인 사용법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기본적인 사용법</h3>\n<p>가장 간단한 방법은 의존성 주입을 원하는 클래스의 생성자에 타입 힌트를 사용하는 것입니다</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyClass</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">/**\n     * @var AnotherClass\n     */</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$dependency</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">__construct</span><span class=\"token punctuation\">(</span>AnotherClass <span class=\"token variable\">$dependency</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">dependency</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$dependency</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>이후 <code class=\"language-text\">new MyClass</code> 를 사용하는 대신, 컨테이너의 <code class=\"language-text\">make()</code> 메소드를 사용합니다</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token variable\">$instance</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$container</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">make</span><span class=\"token punctuation\">(</span>MyClass<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>컨테이너는 자동으로 의존성을 인스턴스화 할 것이며 이것은 실질적으로 아래와 동일합니다</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token variable\">$instance</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MyClass</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">AnotherClass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p><code class=\"language-text\">AnotherClass</code> 가 다른 의존성을 가진 경우 컨테이너는 재귀적으로 의존성을 해결할 것입니다.</p>\n<h3 id=\"실용적인-예제\" style=\"position:relative;\"><a href=\"#%EC%8B%A4%EC%9A%A9%EC%A0%81%EC%9D%B8-%EC%98%88%EC%A0%9C\" aria-label=\"실용적인 예제 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>실용적인 예제</h3>\n<p>여기 조금 더 실용적인 예제가 있습니다. (based on <a href=\"http://php-di.org/doc/getting-started.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">PHP-DI docs</a>)가 있습니다. - 회원 가입 기능에서 메일 기능을 분리하는 예제</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Mailer</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">mail</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$recipient</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$content</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// Send an email to the recipient</span>\n        <span class=\"token comment\">// ...</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">UserManager</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$mailer</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">__construct</span><span class=\"token punctuation\">(</span>Mailer <span class=\"token variable\">$mailer</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">mailer</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$mailer</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">register</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$email</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$password</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// Create the user account</span>\n        <span class=\"token comment\">// ...</span>\n\n        <span class=\"token comment\">// Send the user an email to say hello!</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">mailer</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">mail</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$email</span><span class=\"token punctuation\">,</span> <span class=\"token single-quoted-string string\">'Hello and welcome!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token keyword\">use</span> <span class=\"token package\">Illuminate<span class=\"token punctuation\">\\</span>Container<span class=\"token punctuation\">\\</span>Container</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$container</span> <span class=\"token operator\">=</span> Container<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$userManager</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$container</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">make</span><span class=\"token punctuation\">(</span>UserManager<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$userManager</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">register</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'dave@davejamesmiller.com'</span><span class=\"token punctuation\">,</span> <span class=\"token single-quoted-string string\">'MySuperSecurePassword!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2 id=\"구현-객체에-인터페이스를-바인딩-하는-법\" style=\"position:relative;\"><a href=\"#%EA%B5%AC%ED%98%84-%EA%B0%9D%EC%B2%B4%EC%97%90-%EC%9D%B8%ED%84%B0%ED%8E%98%EC%9D%B4%EC%8A%A4%EB%A5%BC-%EB%B0%94%EC%9D%B8%EB%94%A9-%ED%95%98%EB%8A%94-%EB%B2%95\" aria-label=\"구현 객체에 인터페이스를 바인딩 하는 법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>구현 객체에 인터페이스를 바인딩 하는 법</h2>\n<p>컨테이너를 이용하면 인터페이스와 구현체 (Impl)를 런타임시 쉽게 인스턴스화 할 수 있습니다</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token keyword\">interface</span> <span class=\"token class-name\">MyInterface</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">/* ... */</span> <span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">AnotherInterface</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">/* ... */</span> <span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p>이후, 이 인터페이스들을 구현하는 클래스를 작성합니다</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">MyClass</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">MyInterface</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$dependency</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">__construct</span><span class=\"token punctuation\">(</span>AnotherInterface <span class=\"token variable\">$dependency</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">dependency</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$dependency</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>그리고 <code class=\"language-text\">bind()</code> 메소드를 사용하여 각 인터페이스를 구현체 (class)에 매핑합니다</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token variable\">$container</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>MyInterface<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> MyClass<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$container</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>AnotherInterface<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> AnotherClass<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p>마지막으로, <code class=\"language-text\">make()</code> 메소드에 클래스 이름이 아닌 인터페이스 이름을 전달합니다</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token variable\">$instance</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$container</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">make</span><span class=\"token punctuation\">(</span>MyInterface<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p><strong>Note:</strong> 만약 인터페이스 바인딩을 잊으셨다면 치명적인 오류가 발생합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">Fatal error: Uncaught ReflectionException: Class MyInterface does not exist</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>왜냐하면 컨테이너는 <code class=\"language-text\">new MyInterface</code>, 즉 인터페이스를 인스턴스화 하고자 할 것이기 때문입니다. 이것은 올바른 클래스가 아니죠.</p>\n<h3 id=\"실용적인-예제-1\" style=\"position:relative;\"><a href=\"#%EC%8B%A4%EC%9A%A9%EC%A0%81%EC%9D%B8-%EC%98%88%EC%A0%9C-1\" aria-label=\"실용적인 예제 1 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>실용적인 예제</h3>\n<p>변경 가능한 캐시 레이어를 구성해보겠습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token keyword\">interface</span> <span class=\"token class-name\">Cache</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$key</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$key</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$value</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">RedisCache</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Cache</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$key</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">/* ... */</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$key</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$value</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">/* ... */</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Worker</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">private</span> <span class=\"token variable\">$cache</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">__construct</span><span class=\"token punctuation\">(</span>Cache <span class=\"token variable\">$cache</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">cache</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$cache</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">result</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// Use the cache for something...</span>\n        <span class=\"token variable\">$result</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">cache</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'worker'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$result</span> <span class=\"token operator\">===</span> <span class=\"token constant\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token variable\">$result</span> <span class=\"token operator\">=</span> <span class=\"token function\">do_something_slow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n            <span class=\"token variable\">$this</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token property\">cache</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'worker'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$result</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$result</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token keyword\">use</span> <span class=\"token package\">Illuminate<span class=\"token punctuation\">\\</span>Container<span class=\"token punctuation\">\\</span>Container</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$container</span> <span class=\"token operator\">=</span> Container<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token function\">getInstance</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$container</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>Cache<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> RedisCache<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$result</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$container</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">make</span><span class=\"token punctuation\">(</span>Worker<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">result</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2 id=\"추상--구상-클래스-바인딩\" style=\"position:relative;\"><a href=\"#%EC%B6%94%EC%83%81--%EA%B5%AC%EC%83%81-%ED%81%B4%EB%9E%98%EC%8A%A4-%EB%B0%94%EC%9D%B8%EB%94%A9\" aria-label=\"추상  구상 클래스 바인딩 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>추상 &#x26; 구상 클래스 바인딩</h2>\n<p>추상 클래스(abstract class) 또한 바인딩 할 수 있습니다</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token variable\">$container</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>MyAbstract<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> MyConcreteClass<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>또는 추상 클래스를 서브 클래스로 대체할 수 있습니다</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token variable\">$container</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>MySQLDatabase<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> CustomMySQLDatabase<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<h2 id=\"커스텀-바인딩\" style=\"position:relative;\"><a href=\"#%EC%BB%A4%EC%8A%A4%ED%85%80-%EB%B0%94%EC%9D%B8%EB%94%A9\" aria-label=\"커스텀 바인딩 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>커스텀 바인딩</h2>\n<p>만약 클래스가 추가적인 설정을 요구한다면 클래스의 이름 대신 <code class=\"language-text\">closure</code> 를 <code class=\"language-text\">bind()</code> 메소드의 두 번째 매개 변수로 넘길 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token variable\">$container</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>Database<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>Container <span class=\"token variable\">$container</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MySQLDatabase</span><span class=\"token punctuation\">(</span><span class=\"token constant\">MYSQL_HOST</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">MYSQL_PORT</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">MYSQL_USER</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">MYSQL_PASS</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<p>매 번 데이터베이스 인터페이스가 필요할 때 마다 새로운 MySQLDatabase 인스턴스가 생성되어 사용되며, 몇 가지 미리 지정된 구성값을 필요로 합니다. (단일 인스턴스를 공유하고자 한다면, 아래 <em>싱글톤</em> 를 읽어주시기 바랍니다.)</p>\n<p>클로저는 컨테이너 인스턴스를 첫 번째 매개 변수로 받으며, 필요한 경우 다른 클래스를 인스턴스화 하는 데 사용하실 수 있습니다</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token variable\">$container</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>Logger<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>Container <span class=\"token variable\">$container</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token variable\">$filesystem</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$container</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">make</span><span class=\"token punctuation\">(</span>Filesystem<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FileLogger</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$filesystem</span><span class=\"token punctuation\">,</span> <span class=\"token single-quoted-string string\">'logs/error.log'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>클로저는 구상 클래스가 인스턴스화 하는 법을 따로 지정할 수도 있습니다</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token variable\">$container</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>GitHub\\<span class=\"token package\">Client</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>Container <span class=\"token variable\">$container</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token variable\">$client</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">GitHub<span class=\"token punctuation\">\\</span>Client</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$client</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setEnterpriseUrl</span><span class=\"token punctuation\">(</span><span class=\"token constant\">GITHUB_HOST</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token variable\">$client</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id=\"콜백-해결-컨테이너-이벤트\" style=\"position:relative;\"><a href=\"#%EC%BD%9C%EB%B0%B1-%ED%95%B4%EA%B2%B0-%EC%BB%A8%ED%85%8C%EC%9D%B4%EB%84%88-%EC%9D%B4%EB%B2%A4%ED%8A%B8\" aria-label=\"콜백 해결 컨테이너 이벤트 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>콜백 해결 <a href=\"https://laravel.kr/docs/5.6/container#container-events\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">(컨테이너 이벤트)</a></h3>\n<p>바인딩을 완벽하게 오버라이딩 하는 대신, <code class=\"language-text\">resolving()</code> 메소드를 이용하여 객체의 의존성을 해결할 때 콜백을 받으실 수 있습니다</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token variable\">$container</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">resolving</span><span class=\"token punctuation\">(</span>GitHub\\<span class=\"token package\">Client</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$client</span><span class=\"token punctuation\">,</span> Container <span class=\"token variable\">$container</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token variable\">$client</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setEnterpriseUrl</span><span class=\"token punctuation\">(</span><span class=\"token constant\">GITHUB_HOST</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<p>콜백이 여러 개 존재한다면, 모든 콜백이 호출됩니다. 이 기능은 인터페이스나 추상 클래스에도 동일하게 동작합니다</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token variable\">$container</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">resolving</span><span class=\"token punctuation\">(</span>Logger<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>Logger <span class=\"token variable\">$logger</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token variable\">$logger</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setLevel</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'debug'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$container</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">resolving</span><span class=\"token punctuation\">(</span>FileLogger<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>FileLogger <span class=\"token variable\">$logger</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token variable\">$logger</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setFilename</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'logs/debug.log'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$container</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span>Logger<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> FileLogger<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$logger</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$container</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">make</span><span class=\"token punctuation\">(</span>Logger<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>또한 모든 의존성 해결에 있어서 콜백을 받을 수도 있습니다 (제 생각에는 Logging / Debugging 에만 유용할 것 같습니다)</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token variable\">$container</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">resolving</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$object</span><span class=\"token punctuation\">,</span> Container <span class=\"token variable\">$container</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<h3 id=\"클래스-확장-바인딩-확장\" style=\"position:relative;\"><a href=\"#%ED%81%B4%EB%9E%98%EC%8A%A4-%ED%99%95%EC%9E%A5-%EB%B0%94%EC%9D%B8%EB%94%A9-%ED%99%95%EC%9E%A5\" aria-label=\"클래스 확장 바인딩 확장 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>클래스 확장 <a href=\"https://laravel.kr/docs/5.6/container#extending-bindings\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">(바인딩 확장)</a></h3>\n<p><code class=\"language-text\">extend()</code> 메소드를 사용하여 클래스를 감싸고 다른 객체로 반환시킬 수 있습니다</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token variable\">$container</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">extend</span><span class=\"token punctuation\">(</span>APIClient<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$client</span><span class=\"token punctuation\">,</span> Container <span class=\"token variable\">$container</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">APIClientDecorator</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$client</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<p>반환되는 객체는 여전히 같은 인터페이스를 구현해야 합니다. 그렇지 않으면 Type hinting 에서 에러가 발생할 것입니다.</p>\n<h2 id=\"싱글톤\" style=\"position:relative;\"><a href=\"#%EC%8B%B1%EA%B8%80%ED%86%A4\" aria-label=\"싱글톤 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>싱글톤</h2>\n<p>자동 바인딩과 <code class=\"language-text\">bind()</code> 메소드를 이용하면 필요할 때마다 새로운 인스턴스가 생성됩니다 (또는 클로저가 호출됩니다). 하나의 인스턴스를 공유하고자 한다면 <code class=\"language-text\">bind()</code> 대신 <code class=\"language-text\">singleton()</code> 을 사용할 수 있습니다</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token variable\">$container</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">singleton</span><span class=\"token punctuation\">(</span>Cache<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> RedisCache<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>또는 클로저를 사용할 수도 있습니다</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token variable\">$container</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">singleton</span><span class=\"token punctuation\">(</span>Database<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>Container <span class=\"token variable\">$container</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MySQLDatabase</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'localhost'</span><span class=\"token punctuation\">,</span> <span class=\"token single-quoted-string string\">'testdb'</span><span class=\"token punctuation\">,</span> <span class=\"token single-quoted-string string\">'user'</span><span class=\"token punctuation\">,</span> <span class=\"token single-quoted-string string\">'pass'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<p>구상 클래스를 싱글톤으로 생성하고자 한다면, 두 번째 매개 변수를 제외하고 전달합니다</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token variable\">$container</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">singleton</span><span class=\"token punctuation\">(</span>MySQLDatabase<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>이 경우, 싱글톤 객체는 필요할 때 단 한 번 생성될 것입니다. 그리고 이후에는 이것을 재사용 할 것입니다. 재사용을 원하는 인스턴스가 이미 존재하는 경우, <code class=\"language-text\">instance()</code> 메소드를 사용하시기 바랍니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token variable\">$container</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">instance</span><span class=\"token punctuation\">(</span>Container<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$container</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<h2 id=\"임의의-바인딩-이름\" style=\"position:relative;\"><a href=\"#%EC%9E%84%EC%9D%98%EC%9D%98-%EB%B0%94%EC%9D%B8%EB%94%A9-%EC%9D%B4%EB%A6%84\" aria-label=\"임의의 바인딩 이름 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>임의의 바인딩 이름</h2>\n<p>클래스나 인터페이스 이름 대신 임의의 문자열을 사용할 수 있습니다. 타입 힌트는 사용할 수 없으며, <code class=\"language-text\">make()</code> 메소드를 이용해야 합니다</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token variable\">$container</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'database'</span><span class=\"token punctuation\">,</span> MySQLDatabase<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$db</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$container</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">make</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'database'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<p>인터페이스와 클래스 모두 짧은 이름 기능을 지원하려면 <code class=\"language-text\">alias()</code> 메소드를 사용해야 합니다</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token variable\">$container</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">singleton</span><span class=\"token punctuation\">(</span>Cache<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> RedisCache<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$container</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">alias</span><span class=\"token punctuation\">(</span>Cache<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token single-quoted-string string\">'cache'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$cache1</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$container</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">make</span><span class=\"token punctuation\">(</span>Cache<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$cache2</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$container</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">make</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'cache'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token function\">assert</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$cache1</span> <span class=\"token operator\">===</span> <span class=\"token variable\">$cache2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2 id=\"임의의-값-저장\" style=\"position:relative;\"><a href=\"#%EC%9E%84%EC%9D%98%EC%9D%98-%EA%B0%92-%EC%A0%80%EC%9E%A5\" aria-label=\"임의의 값 저장 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>임의의 값 저장</h2>\n<p>또한 컨테이너를 임의의 값을 저장하기 위해 사용할 수도 있습니다 (e.g. 설정 데이터)</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token variable\">$container</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">instance</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'database.name'</span><span class=\"token punctuation\">,</span> <span class=\"token single-quoted-string string\">'testdb'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$db_name</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$container</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">make</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'database.name'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<p>이 방법은 배열 접근을 지원하고 있습니다. 조금 더 자연스러운 방식이죠</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token variable\">$container</span><span class=\"token punctuation\">[</span><span class=\"token single-quoted-string string\">'database.name'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token single-quoted-string string\">'testdb'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$db_name</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$container</span><span class=\"token punctuation\">[</span><span class=\"token single-quoted-string string\">'database.name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<p>클로저 바인딩과 같이 사용하면 왜 이것이 유용할 수 있는지 알 수 있습니다</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token variable\">$container</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">singleton</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'database'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>Container <span class=\"token variable\">$container</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MySQLDatabase</span><span class=\"token punctuation\">(</span>\n        <span class=\"token variable\">$container</span><span class=\"token punctuation\">[</span><span class=\"token single-quoted-string string\">'database.host'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        <span class=\"token variable\">$container</span><span class=\"token punctuation\">[</span><span class=\"token single-quoted-string string\">'database.name'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        <span class=\"token variable\">$container</span><span class=\"token punctuation\">[</span><span class=\"token single-quoted-string string\">'database.user'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        <span class=\"token variable\">$container</span><span class=\"token punctuation\">[</span><span class=\"token single-quoted-string string\">'database.pass'</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>라라벨 자체는 컨테이너를 설정(구성)을 위해 사용하지 않습니다. 설정 파일은 <a href=\"https://laravel.kr/docs/5.6/configuration\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Config</a> 로 분리되어 있고 설정에 대한 부분은 <a href=\"https://github.com/laravel/framework/blob/5.6/src/Illuminate/Config/Repository.php\" target=\"_blank\" rel=\"nofollow noopener noreferrer\"><code class=\"language-text\">Illuminate\\Config\\Repository</code></a> 클래스에 존재합니다. 그러나 <a href=\"http://php-di.org/doc/php-definitions.html#values\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">PHP-DI</a> 는 아닙니다.</p>\n<p><strong>Tip:</strong> 배열 구문은 <code class=\"language-text\">make()</code> 메소드 대신 객체를 인스턴스화 할 때 사용할 수 있습니다</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token variable\">$db</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$container</span><span class=\"token punctuation\">[</span><span class=\"token single-quoted-string string\">'database'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<h2 id=\"함수와-메소드의-의존성-주입\" style=\"position:relative;\"><a href=\"#%ED%95%A8%EC%88%98%EC%99%80-%EB%A9%94%EC%86%8C%EB%93%9C%EC%9D%98-%EC%9D%98%EC%A1%B4%EC%84%B1-%EC%A3%BC%EC%9E%85\" aria-label=\"함수와 메소드의 의존성 주입 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>함수와 메소드의 의존성 주입</h2>\n<p>우리는 지금까지 생성자를 통한 의존성 주입을 보았습니다. 그러나 라라벨은 함수에도 의존성 주입 기능을 제공합니다</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token keyword\">function</span> <span class=\"token function\">do_something</span><span class=\"token punctuation\">(</span>Cache <span class=\"token variable\">$cache</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">/* ... */</span> <span class=\"token punctuation\">}</span>\n\n<span class=\"token variable\">$result</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$container</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'do_something'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<p>추가적인 매개 변수는 순서 또는 연관 배열로 전달할 수 있습니다</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token keyword\">function</span> <span class=\"token function\">show_product</span><span class=\"token punctuation\">(</span>Cache <span class=\"token variable\">$cache</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$id</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$tab</span> <span class=\"token operator\">=</span> <span class=\"token single-quoted-string string\">'details'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">/* ... */</span> <span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// show_product($cache, 1)</span>\n<span class=\"token variable\">$container</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'show_product'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$container</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'show_product'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token single-quoted-string string\">'id'</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// show_product($cache, 1, 'spec')</span>\n<span class=\"token variable\">$container</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'show_product'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token single-quoted-string string\">'spec'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$container</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'show_product'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token single-quoted-string string\">'id'</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token single-quoted-string string\">'tab'</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token single-quoted-string string\">'spec'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>이 기능은 Callable 메소드에 모두 적용할 수 있습니다.</p>\n<h4 id=\"closures\" style=\"position:relative;\"><a href=\"#closures\" aria-label=\"closures permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Closures</h4>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token variable\">$closure</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>Cache <span class=\"token variable\">$cache</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">/* ... */</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$container</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$closure</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<h4 id=\"static-methods\" style=\"position:relative;\"><a href=\"#static-methods\" aria-label=\"static methods permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Static methods</h4>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">SomeClass</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">function</span> <span class=\"token function\">staticMethod</span><span class=\"token punctuation\">(</span>Cache <span class=\"token variable\">$cache</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">/* ... */</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token variable\">$container</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token single-quoted-string string\">'SomeClass'</span><span class=\"token punctuation\">,</span> <span class=\"token single-quoted-string string\">'staticMethod'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">// or:</span>\n<span class=\"token variable\">$container</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'SomeClass::staticMethod'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<h4 id=\"instance-methods\" style=\"position:relative;\"><a href=\"#instance-methods\" aria-label=\"instance methods permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Instance methods</h4>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">PostController</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">index</span><span class=\"token punctuation\">(</span>Cache <span class=\"token variable\">$cache</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">/* ... */</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">show</span><span class=\"token punctuation\">(</span>Cache <span class=\"token variable\">$cache</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$id</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">/* ... */</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token variable\">$controller</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$container</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">make</span><span class=\"token punctuation\">(</span>PostController<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$container</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$controller</span><span class=\"token punctuation\">,</span> <span class=\"token single-quoted-string string\">'index'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$container</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token variable\">$controller</span><span class=\"token punctuation\">,</span> <span class=\"token single-quoted-string string\">'show'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token single-quoted-string string\">'id'</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id=\"인스턴스-메소드-호출을-위한-손쉬운-방법\" style=\"position:relative;\"><a href=\"#%EC%9D%B8%EC%8A%A4%ED%84%B4%EC%8A%A4-%EB%A9%94%EC%86%8C%EB%93%9C-%ED%98%B8%EC%B6%9C%EC%9D%84-%EC%9C%84%ED%95%9C-%EC%86%90%EC%89%AC%EC%9A%B4-%EB%B0%A9%EB%B2%95\" aria-label=\"인스턴스 메소드 호출을 위한 손쉬운 방법 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>인스턴스 메소드 호출을 위한 손쉬운 방법</h3>\n<p>클래스를 인스턴스화하고 바로 메소드를 호출하는 빠른 방법이 있습니다. <code class=\"language-text\">ClassName@methodName</code> 을 사용하는 것입니다</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token variable\">$container</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'PostController@index'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$container</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'PostController@show'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token single-quoted-string string\">'id'</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p>컨테이너는 클래스를 인스턴스화하는 것에 이 기능을 사용합니다. 이것은 다음을 의미합니다</p>\n<ul>\n<li>의존성은 생성자를 통해 주입됩니다</li>\n<li>클래스를 재사용하고자 할 때 싱글톤으로 정의할 수 있습니다</li>\n<li>구상 클래스 대신 인터페이스 또는 임의의 이름을 사용할 수 있습니다</li>\n</ul>\n<p>예를 들어, 아래와 같은 경우가 있습니다</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">PostController</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">__construct</span><span class=\"token punctuation\">(</span>Request <span class=\"token variable\">$request</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">/* ... */</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">index</span><span class=\"token punctuation\">(</span>Cache <span class=\"token variable\">$cache</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">/* ... */</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token variable\">$container</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">singleton</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'post'</span><span class=\"token punctuation\">,</span> PostController<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$container</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'post@index'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p>마지막으로, 세 번째 매개 변수로 \"기본 메소드\"를 전달할 수 있습니다. 만약 첫번째 매개 변수가 메소드가 따로 지정되어 있지 않은 클래스 이름인 경우, 기본 메소드가 대신 호출됩니다. 라라벨은 이 기능을 이용하여 <a href=\"https://laravel.kr/docs/5.6/events#registering-events-and-listeners\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">이벤트 핸들러</a>를 구현합니다</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token variable\">$container</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span>MyEventHandler<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$parameters</span><span class=\"token punctuation\">,</span> <span class=\"token single-quoted-string string\">'handle'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 위와 같음</span>\n<span class=\"token variable\">$container</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'MyEventHandler@handle'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$parameters</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id=\"메소드-호출-바인딩\" style=\"position:relative;\"><a href=\"#%EB%A9%94%EC%86%8C%EB%93%9C-%ED%98%B8%EC%B6%9C-%EB%B0%94%EC%9D%B8%EB%94%A9\" aria-label=\"메소드 호출 바인딩 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>메소드 호출 바인딩</h3>\n<p><code class=\"language-text\">bindMethod()</code> 메소드는 메소드 호출을 오버라이드 할 수 있습니다. 예를 들어, 추가적인 매개 변수를 아래와 같이 전달할 수 있습니다</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token variable\">$container</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">bindMethod</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'PostController@index'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$controller</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$container</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token variable\">$posts</span> <span class=\"token operator\">=</span> <span class=\"token function\">get_posts</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token variable\">$controller</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">index</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$posts</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>이 기능은 기존의 메소드 대신 클로저를 호출하여 동작합니다</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token variable\">$container</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'PostController@index'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$container</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'PostController'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token single-quoted-string string\">'index'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$container</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">PostController</span><span class=\"token punctuation\">,</span> <span class=\"token single-quoted-string string\">'index'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<p>그러나 <code class=\"language-text\">call()</code> 메소드에서 추가적인 매개 변수를 전달할 수는 없습니다</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token comment\">// 사용할 수 없음</span>\n<span class=\"token variable\">$container</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">call</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'PostController@index'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token single-quoted-string string\">'Not used :-('</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p><em><strong>Notes:</strong> 이 메소드는 <a href=\"https://github.com/laravel/framework/blob/5.6/src/Illuminate/Contracts/Container/Container.php\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">컨테이너 인터페이스</a>에 존재하지 않습니다. <a href=\"https://github.com/laravel/framework/blob/5.6/src/Illuminate/Container/Container.php\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">컨테이너 클래스</a>에만 존재합니다. <a href=\"https://github.com/laravel/framework/pull/16800\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">왜 매개 변수를 무시하는지 이유는 이곳에서 확인하실 수 있습니다</a></em></p>\n<h2 id=\"문맥에-따른-조건적-바인딩\" style=\"position:relative;\"><a href=\"#%EB%AC%B8%EB%A7%A5%EC%97%90-%EB%94%B0%EB%A5%B8-%EC%A1%B0%EA%B1%B4%EC%A0%81-%EB%B0%94%EC%9D%B8%EB%94%A9\" aria-label=\"문맥에 따른 조건적 바인딩 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>문맥에 따른 조건적 바인딩</h2>\n<p>가끔 여러분은 각각의 클래스마다 다른 구현 객체를 전달하고자 할 수도 있습니다. 다음은 <a href=\"https://laravel.kr/docs/5.6/container#contextual-binding\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">라라벨 공식 문서</a>에서 일부 수정된 예제입니다</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token variable\">$container</span>\n    <span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">when</span><span class=\"token punctuation\">(</span>PhotoController<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span>\n    <span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">needs</span><span class=\"token punctuation\">(</span>Filesystem<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span>\n    <span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">give</span><span class=\"token punctuation\">(</span>LocalFilesystem<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$container</span>\n    <span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">when</span><span class=\"token punctuation\">(</span>VideoController<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span>\n    <span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">needs</span><span class=\"token punctuation\">(</span>Filesystem<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span>\n    <span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">give</span><span class=\"token punctuation\">(</span>S3Filesystem<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p><code class=\"language-text\">PhotoController</code> 와 <code class=\"language-text\">VideoController</code> 는 <code class=\"language-text\">Filesystem</code> 인터페이스에 의존적일 수 있지만, 서로 다른 구현체를 받게 됩니다. <code class=\"language-text\">bind()</code> 와 같이 <code class=\"language-text\">give()</code> 에서도 클로저를 사용할 수 있습니다</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token variable\">$container</span>\n    <span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">when</span><span class=\"token punctuation\">(</span>VideoController<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span>\n    <span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">needs</span><span class=\"token punctuation\">(</span>Filesystem<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span>\n    <span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">give</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> Storage<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token function\">disk</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'s3'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>또는 이름(문자열)을 통해 의존성을 주입할 수도 있습니다</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token variable\">$container</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">instance</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'s3'</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$s3Filesystem</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$container</span>\n    <span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">when</span><span class=\"token punctuation\">(</span>VideoController<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span>\n    <span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">needs</span><span class=\"token punctuation\">(</span>Filesystem<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span>\n    <span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">give</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'s3'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id=\"기본-타입-바인딩\" style=\"position:relative;\"><a href=\"#%EA%B8%B0%EB%B3%B8-%ED%83%80%EC%9E%85-%EB%B0%94%EC%9D%B8%EB%94%A9\" aria-label=\"기본 타입 바인딩 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>기본 타입 바인딩</h3>\n<p>여러분은 또한 기본 타입들(string, integer..) 를 <code class=\"language-text\">needs()</code> 메소드를 통해 주입할 수 있습니다 (인터페이스 대신). 그리고 <code class=\"language-text\">give()</code> 메소드를 통해 값들을 전달할 수 있습니다</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token variable\">$container</span>\n    <span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">when</span><span class=\"token punctuation\">(</span>MySQLDatabase<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span>\n    <span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">needs</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'$username'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">give</span><span class=\"token punctuation\">(</span><span class=\"token constant\">DB_USER</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<p>클로저를 통해 값이 필요할 때 까지 값을 가지고 오는 것을 늦출 수 있습니다</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token variable\">$container</span>\n    <span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">when</span><span class=\"token punctuation\">(</span>MySQLDatabase<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span>\n    <span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">needs</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'$username'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">give</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token function\">config</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'database.user'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>여기서 여러분은 클래스나 또는 의존성 이름을 사용할 수 없습니다 (e.g. <code class=\"language-text\">give(&#39;database.user&#39;)</code>). 왜냐하면, 이 값은 리터럴 값으로 반환되기 때문입니다. 대신 클로저를 사용할 수 있습니다</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token variable\">$container</span>\n    <span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">when</span><span class=\"token punctuation\">(</span>MySQLDatabase<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span>\n    <span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">needs</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'$username'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">give</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>Container <span class=\"token variable\">$container</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token variable\">$container</span><span class=\"token punctuation\">[</span><span class=\"token single-quoted-string string\">'database.user'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h2 id=\"태깅-tagging\" style=\"position:relative;\"><a href=\"#%ED%83%9C%EA%B9%85-tagging\" aria-label=\"태깅 tagging permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>태깅 <a href=\"https://laravel.kr/docs/5.6/container#tagging\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">(Tagging)</a></h2>\n<p>컨테이너를 사용하여 관련된 바인딩을 \"태그\"할 수 있습니다</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token variable\">$container</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">tag</span><span class=\"token punctuation\">(</span>MyPlugin<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token single-quoted-string string\">'plugin'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$container</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">tag</span><span class=\"token punctuation\">(</span>AnotherPlugin<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token single-quoted-string string\">'plugin'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p>이후 태그가 지정된 모든 인스턴스를 배열로 받아올 수 있습니다</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token keyword\">foreach</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$container</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">tagged</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'plugin'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token variable\">$plugin</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token variable\">$plugin</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<p><code class=\"language-text\">tag()</code>  메소드의 매개 변수는 배열도 사용할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token variable\">$container</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">tag</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>MyPlugin<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> AnotherPlugin<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token single-quoted-string string\">'plugin'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$container</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">tag</span><span class=\"token punctuation\">(</span>MyPlugin<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token single-quoted-string string\">'plugin'</span><span class=\"token punctuation\">,</span> <span class=\"token single-quoted-string string\">'plugin.admin'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<h2 id=\"재바인딩-rebinding\" style=\"position:relative;\"><a href=\"#%EC%9E%AC%EB%B0%94%EC%9D%B8%EB%94%A9-rebinding\" aria-label=\"재바인딩 rebinding permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>재바인딩 (Rebinding)</h2>\n<p><em><strong>Note:</strong> 이 기능은 조금 더 고급 기능이며, 대부분의 경우 이 기능을 필요로 하지 않습니다. 원하신다면 이 부분을 넘기셔도 괜찮습니다!</em></p>\n<p>바인딩 또는 인스턴스가 사용된 후 변경될 때 <code class=\"language-text\">rebinding()</code> 콜백이 호출됩니다. 예를 들어 세션 클래스가 Auth 클래스에 의해 사용된 후 변경된다면, Auth 클래스는 변경 사실을 알아야 합니다</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token variable\">$container</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">singleton</span><span class=\"token punctuation\">(</span>Auth<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>Container <span class=\"token variable\">$container</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token variable\">$auth</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Auth</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$auth</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setSession</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$container</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">make</span><span class=\"token punctuation\">(</span>Session<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token variable\">$container</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">rebinding</span><span class=\"token punctuation\">(</span>Session<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$container</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$session</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">use</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$auth</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token variable\">$auth</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setSession</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$session</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token variable\">$auth</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$container</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">instance</span><span class=\"token punctuation\">(</span>Session<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Session</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token single-quoted-string string\">'username'</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token single-quoted-string string\">'dave'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$auth</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$container</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">make</span><span class=\"token punctuation\">(</span>Auth<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">echo</span> <span class=\"token variable\">$auth</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">username</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// dave</span>\n<span class=\"token variable\">$container</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">instance</span><span class=\"token punctuation\">(</span>Session<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Session</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token single-quoted-string string\">'username'</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token single-quoted-string string\">'danny'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">echo</span> <span class=\"token variable\">$auth</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">username</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// danny</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>재바인딩에 대해 더 자세한 내용은 <a href=\"https://stackoverflow.com/questions/38974593/laravels-ioc-container-rebinding-abstract-types\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">이곳</a>과 <a href=\"https://code.tutsplus.com/tutorials/digging-in-to-laravels-ioc-container--cms-22167\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">이곳</a>을 참고해 주시기 바랍니다.</p>\n<h3 id=\"refresh\" style=\"position:relative;\"><a href=\"#refresh\" aria-label=\"refresh permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>refresh()</h3>\n<p>이 기능을 더 쉽게 사용하고자 할 때, <code class=\"language-text\">refresh()</code> 메소드를 사용할 수 있습니다. 이것은 아래와 같은 일반적인 패턴을 다루고자 할 때 사용합니다</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token variable\">$container</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">singleton</span><span class=\"token punctuation\">(</span>Auth<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>Container <span class=\"token variable\">$container</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token variable\">$auth</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Auth</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$auth</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setSession</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$container</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">make</span><span class=\"token punctuation\">(</span>Session<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token variable\">$container</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">refresh</span><span class=\"token punctuation\">(</span>Session<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$auth</span><span class=\"token punctuation\">,</span> <span class=\"token single-quoted-string string\">'setSession'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token variable\">$auth</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>또한 이 기능은 이미 존재하는 인스턴스나 바인딩을 반환하므로, 아래와 같이 코드를 작성할 수도 있습니다</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token variable\">$container</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">singleton</span><span class=\"token punctuation\">(</span>Session<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$container</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">singleton</span><span class=\"token punctuation\">(</span>Auth<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>Container <span class=\"token variable\">$container</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token variable\">$auth</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Auth</span><span class=\"token punctuation\">;</span>\n    <span class=\"token variable\">$auth</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">setSession</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$container</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">refresh</span><span class=\"token punctuation\">(</span>Session<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$auth</span><span class=\"token punctuation\">,</span> <span class=\"token single-quoted-string string\">'setSession'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token variable\">$auth</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>(개인적으로 저는 이 구문이 더 혼란스럽고 위의 좀 더 자세한 방법을 선호합니다)</p>\n<p><em><strong>Notes:</strong> 이 메소드는 <a href=\"https://github.com/laravel/framework/blob/5.6/src/Illuminate/Contracts/Container/Container.php\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">컨테이너 인터페이스</a>에 존재하지 않습니다. <a href=\"https://github.com/laravel/framework/blob/5.6/src/Illuminate/Container/Container.php\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">컨테이너 클래스</a>에만 존재합니다.</em></p>\n<h2 id=\"생성자-매개-변수-오버라이딩\" style=\"position:relative;\"><a href=\"#%EC%83%9D%EC%84%B1%EC%9E%90-%EB%A7%A4%EA%B0%9C-%EB%B3%80%EC%88%98-%EC%98%A4%EB%B2%84%EB%9D%BC%EC%9D%B4%EB%94%A9\" aria-label=\"생성자 매개 변수 오버라이딩 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>생성자 매개 변수 오버라이딩</h2>\n<p><code class=\"language-text\">makeWith()</code> 메소드는 생성자 매개 변수에 추가적인 값을 전달할 수 있습니다. 기존에 존재하는 인스턴스나 싱글톤을 무시하고 종속성을 주입하면서 다른 매개 변수로 클래스의 인스턴스를 생성할 때 유용하게 사용될 수 있습니다</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Post</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">public</span> <span class=\"token keyword\">function</span> <span class=\"token function\">__construct</span><span class=\"token punctuation\">(</span>Database <span class=\"token variable\">$db</span><span class=\"token punctuation\">,</span> int <span class=\"token variable\">$id</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">/* ... */</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token variable\">$post1</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$container</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">makeWith</span><span class=\"token punctuation\">(</span>Post<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token single-quoted-string string\">'id'</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token variable\">$post2</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$container</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">makeWith</span><span class=\"token punctuation\">(</span>Post<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token single-quoted-string string\">'id'</span> <span class=\"token operator\">=</span><span class=\"token operator\">></span> <span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p><em><strong>Note:</strong> 라라벨 5.3 이하에서는 간단하게 <code class=\"language-text\">make($class, $pameters)</code> 로 사용했었습니다. 라라벨 5.4에서 이 기능은 삭제되어 <code class=\"language-text\">makeWith()</code> 로 추가되었습니다. 그러나, 라라벨 5.5 에서는 다시 라라벨 5.3과 같이 사용할 수 있습니다.</em></p>\n<h2 id=\"그-외-메소드\" style=\"position:relative;\"><a href=\"#%EA%B7%B8-%EC%99%B8-%EB%A9%94%EC%86%8C%EB%93%9C\" aria-label=\"그 외 메소드 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>그 외 메소드</h2>\n<p>그 외 유용하다고 생각하는 모든 메소드를 다루고자 합니다. 이 내용으로 충분하지 않다면 아래 퍼블릭 메소드를 참고하실 수 있습니다.</p>\n<h3 id=\"bound\" style=\"position:relative;\"><a href=\"#bound\" aria-label=\"bound permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>bound()</h3>\n<p><code class=\"language-text\">bound()</code> 메소드는 <code class=\"language-text\">bind()</code>, <code class=\"language-text\">singleton()</code>, <code class=\"language-text\">instance()</code>, <code class=\"language-text\">alias()</code> 메소드에 의해 클래스 또는 이름(문자열)이 바운딩 되었을 때 <code class=\"language-text\">true</code> 를 반환합니다</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span> <span class=\"token variable\">$container</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">bound</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'database.user'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<p>배열 접근 구문과 <code class=\"language-text\">isset()</code>를 사용할 수도 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span> <span class=\"token keyword\">isset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$container</span><span class=\"token punctuation\">[</span><span class=\"token single-quoted-string string\">'database.user'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// ...</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<p><code class=\"language-text\">unset()</code> 함수를 통해 제거될 수 있으며, 지정된 바인딩 / 인스턴스 / 별칭을 제거합니다</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token keyword\">unset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$container</span><span class=\"token punctuation\">[</span><span class=\"token single-quoted-string string\">'database.user'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$container</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">bound</span><span class=\"token punctuation\">(</span><span class=\"token single-quoted-string string\">'database.user'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<h3 id=\"bindif\" style=\"position:relative;\"><a href=\"#bindif\" aria-label=\"bindif permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>bindIf()</h3>\n<p><code class=\"language-text\">bindIf()</code> 는 바인딩이 존재하지 않는 경우에만 바인딩을 하는 메소드 입니다. 동작 자체는 <code class=\"language-text\">bind()</code> 와 동일하게 동작합니다. (위의 <code class=\"language-text\">bound()</code> 참고)</p>\n<p>이것은 잠재적으로 사용자의 오버라이드를 허용하여 패키지의 기본 바인딩을 등록하게끔 사용될 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token variable\">$container</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">bindIf</span><span class=\"token punctuation\">(</span>Loader<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> FallbackLoader<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>그러나 <code class=\"language-text\">singletonIf()</code> 메소드는 없습니다. 대신, <code class=\"language-text\">bindIf($abstract, $concrete, true)</code> 를 통해 동일한 기능을 사용할 수 있습니다</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token variable\">$container</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">bindIf</span><span class=\"token punctuation\">(</span>Loader<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> FallbackLoader<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> <span class=\"token boolean constant\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>또는 아래와 같은 방법도 가능합니다</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span> <span class=\"token variable\">$container</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">bound</span><span class=\"token punctuation\">(</span>Loader<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token variable\">$container</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">singleton</span><span class=\"token punctuation\">(</span>Loader<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">,</span> FallbackLoader<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<h3 id=\"resolved\" style=\"position:relative;\"><a href=\"#resolved\" aria-label=\"resolved permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>resolved()</h3>\n<p><code class=\"language-text\">resolved()</code> 메소드는 의존성 문제가 이전에 해결된 경우 <code class=\"language-text\">true</code> 를 반환합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$container</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">resolved</span><span class=\"token punctuation\">(</span>Database<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span>\n<span class=\"token variable\">$container</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">make</span><span class=\"token punctuation\">(</span>Database<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$container</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">resolved</span><span class=\"token punctuation\">(</span>Database<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// true</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<p>저는 이 기능이 유용할 것인지 확신하지 못하겠습니다.. <code class=\"language-text\">unset()</code> 을 사용하면 재설정이 이루어지는데 말이죠 (위의 <code class=\"language-text\">bound()</code> 참고)</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token keyword\">unset</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$container</span><span class=\"token punctuation\">[</span>Database<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">var_dump</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$container</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">resolved</span><span class=\"token punctuation\">(</span>Database<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// false</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<h3 id=\"factory\" style=\"position:relative;\"><a href=\"#factory\" aria-label=\"factory permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>factory()</h3>\n<p><code class=\"language-text\">factory()</code> 메소드는 매개 변수가 존재하지 않고 <code class=\"language-text\">make()</code> 를 호출하는 클로저를 반환합니다</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token variable\">$dbFactory</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$container</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">factory</span><span class=\"token punctuation\">(</span>Database<span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$db</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$dbFactory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<p>이 기능이 언제 쓸모가 있을 지 모르겠네요.</p>\n<h3 id=\"wrap\" style=\"position:relative;\"><a href=\"#wrap\" aria-label=\"wrap permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>wrap()</h3>\n<p><code class=\"language-text\">wrap()</code> 메소드는 클로저가 실행될 때 종속성이 주입되도록 클로저를 래핑합니다. wrap 메소드는 매개 변수 배열을 사용할 수 있으며 반환된 클로저에는 매개 변수가 없습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"php\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-php line-numbers\"><code class=\"language-php\"><span class=\"token variable\">$cacheGetter</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>Cache <span class=\"token variable\">$cache</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$key</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token variable\">$cache</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$key</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$usernameGetter</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$container</span><span class=\"token operator\">-</span><span class=\"token operator\">></span><span class=\"token function\">wrap</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$cacheGetter</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token single-quoted-string string\">'username'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token variable\">$username</span> <span class=\"token operator\">=</span> <span class=\"token variable\">$usernameGetter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>이 기능이 언제 쓸모가 있을 지 모르겠네요. (2)</p>\n<p><em><strong>Note:</strong> 이 메소드는 <a href=\"https://github.com/laravel/framework/blob/5.6/src/Illuminate/Contracts/Container/Container.php\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">컨테이너 인터페이스</a>에 존재하지 않습니다. <a href=\"https://github.com/laravel/framework/blob/5.6/src/Illuminate/Container/Container.php\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">컨테이너 클래스</a>에만 존재합니다.</em></p>\n<h3 id=\"afterresolving\" style=\"position:relative;\"><a href=\"#afterresolving\" aria-label=\"afterresolving permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>afterResolving()</h3>\n<p><code class=\"language-text\">afterResolving()</code> 은 <code class=\"language-text\">resolving()</code> 콜백 후에 <code class=\"language-text\">afterResolving()</code> 콜백을 호출한다는 점을 제외하면 <code class=\"language-text\">resolving()</code> 과 동일합니다. 이 기능이 언제 쓸모가 있을 지 모르겠네요.</p>\n<h3 id=\"마지막으로\" style=\"position:relative;\"><a href=\"#%EB%A7%88%EC%A7%80%EB%A7%89%EC%9C%BC%EB%A1%9C\" aria-label=\"마지막으로 permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>마지막으로..</h3>\n<ul>\n<li><code class=\"language-text\">isShared()</code> : 주어진 타입이 공유된 싱글톤인지 인스턴스인지 알아냅니다.</li>\n<li><code class=\"language-text\">isAlias()</code> : 주어진 문자열이 등록된 별칭(alias)인지 알아냅니다.</li>\n<li><code class=\"language-text\">hasMethodBinding()</code> : 컨테이너가 주어진 바인딩을 가지고 있는지 알아냅니다.</li>\n<li><code class=\"language-text\">getBindings()</code> : 등록된 모든 바인딩을 원시 배열의 형태로 가져옵니다.</li>\n<li><code class=\"language-text\">getAlias($abstract)</code> : 기본 클래스와 바인딩 이름에 대한 별칭을 해결(Resolves) 합니다.</li>\n<li><code class=\"language-text\">forgetInstance($abstract)</code> : 단일 인스턴스 객체(싱글톤)를 지웁니다.</li>\n<li><code class=\"language-text\">forgetInstances()</code> 모든 인스턴스 객체를 지웁니다.</li>\n<li><code class=\"language-text\">flush()</code> : 모든 바인딩과 인스턴스를 지우고 컨테이너를 리셋합니다 (effectively resetting the container).</li>\n<li><code class=\"language-text\">setInstance()</code> : <code class=\"language-text\">getInstance()</code> 에서 사용된 인스턴스를 대체합니다. (Tip: <code class=\"language-text\">setInstance(null)</code> 을 이용해서 이것을 지우면 다음에 새로운 인스턴스가 생성됩니다.)</li>\n</ul>\n<p><em><strong>Note:</strong> 마지막 부분의 메소드들은 <a href=\"https://github.com/laravel/framework/blob/5.6/src/Illuminate/Contracts/Container/Container.php\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">컨테이너 인터페이스</a>의 일부가 아닙니다.</em></p>\n<hr>\n<ul>\n<li>이 문서의 원본은 2017년 06월 15일에 DaveJamesMiller.com 에서 포스팅되었습니다.</li>\n<li>이 문서는 한국어로 번역되었습니다. 번역한 문서는 <a href=\"https://gist.github.com/davejamesmiller/bd857d9b0ac895df7604dd2e63b23afe\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">이곳</a>을 클릭하시면 이동하실 수 있습니다.</li>\n<li>이 문서는 원작자의 허가를 받아 번역되었습니다. Dave <a href=\"mailto:%5Bdave@davejamesmiller.com%5D(mailto:dave%40davejamesmiller.com)\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">[dave@davejamesmiller.com](mailto:dave%40davejamesmiller.com)</a>. 감사합니다.</li>\n<li>이 문서는 <a href=\"https://github.com/FOKKIA\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Yongwoo Lee &#x3C;&#x3C;buildrush@naver.com>></a> 가 번역하였습니다.</li>\n</ul>","excerpt":"Laravel 의 제어의 역전(Inversion of Control) / 의존성 주입 (Dependency Injection…","fields":{"slug":"/2018/07/04/laravel-dependency-injection-in-depth"},"frontmatter":{"id":"c192eaba9fefc632acf87ed636593475","title":123,"slug":"/2018/07/04/laravel-dependency-injection-in-depth","date":"2018-05-01T03:48:03.125Z","headerImage":"https://i.imgur.com/mich3dS.jpg"}},"previous":null,"next":null}]}},"pageContext":{"id":"1f6d524c-17fa-5d22-9920-db6b7dc3727f","index":0}}}